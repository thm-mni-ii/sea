language: cpp
dist: focal

compiler:
  - clang

addons:
  apt:
    packages:
      - cppcheck
  sonarcloud:
    organization: "andrej-sajenko-github"
    token:
      secure: $SONAR_TOKEN

#cache:
#  directories:
#  - ./third-party

before_install:
  - git fetch --unshallow
  - pip install --user cpplint cpp-coveralls
  - 'if test $CC = clang; then ln -sf $(which llvm-cov) /home/travis/bin/gcov; fi'

script:
  - cpplint --quiet src/*.* src/*/*.*
  - cpplint --quiet include/sealib/*.* include/sealib/*/*.*
  - cpplint --quiet src-view/*.*
  - cpplint --quiet test/*.*
  - cppcheck --enable=performance,portability --error-exitcode=1 --quiet -Iinclude src/ src-view/
  - cmake -DCOVERAGE=1 .
  - 'if test $TRAVIS_PULL_REQUEST = false || test "$TRAVIS_PULL_REQUEST_SLUG" = thm-mni-ii/sea; then build-wrapper-linux-x86-64 --out-dir bw-output make -j$(nproc); else make -j$(nproc); fi'
  - ./bin/tests

after_success:
  - (cd CMakeFiles/tests.dir && for d in $(find src -type d); do gcov $d/*.gcno >/dev/null; done); cp CMakeFiles/tests.dir/*.gcov .
  - coveralls --no-gcov --root . -e src-view -e test -e include -e third-party -e CMakeFiles
  - 'if test $TRAVIS_PULL_REQUEST = false || test "$TRAVIS_PULL_REQUEST_SLUG" = thm-mni-ii/sea; then sonar-scanner; fi'

before_deploy:
  # tar the header files and the library
  - tar -czf sealib.tar.gz ./include ./lib
deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file: "sealib.tar.gz"
  skip_cleanup: true
  on:
    tags: true
    branch: master
